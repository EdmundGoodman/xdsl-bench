{
    "import_xdsl_opt.time_import_inspect": {
        "code": "def time_import_inspect() -> None:\n    \"\"\"Import benchmark using the default asv mechanism.\"\"\"\n    from xdsl.xdsl_opt_main import xDSLOptMain  # noqa: F401",
        "min_run_count": 2,
        "name": "import_xdsl_opt.time_import_inspect",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "type": "time",
        "unit": "seconds",
        "version": "f15c52accd047bf4c48a49bc3923b404f8541042abc47d1eff25b5efef0aedc1",
        "warmup_time": -1
    },
    "import_xdsl_opt.timeraw_import_inspect": {
        "code": "def timeraw_import_inspect() -> str:\n    \"\"\"Import benchmark using the `raw` asv mechanism.\"\"\"\n    return \"\"\"\n    from xdsl.xdsl_opt_main import xDSLOptMain\n    \"\"\"",
        "min_run_count": 2,
        "name": "import_xdsl_opt.timeraw_import_inspect",
        "number": 1,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "type": "time",
        "unit": "seconds",
        "version": "4ded7e1d893b3dd498b0c130a527acc808ac07729e4e619222cbfd79cd756084",
        "warmup_time": -1
    },
    "lexer.time_lexer__apply_pdl_extra_file": {
        "code": "def time_lexer__apply_pdl_extra_file() -> None:\n    \"\"\"Time lexing the `apply_pdl_extra_file.mlir` file.\"\"\"\n    return lex_file(BENCHMARKS_DIR.parent / MLIR_FILES[\"apply_pdl_extra_file\"])",
        "min_run_count": 2,
        "name": "lexer.time_lexer__apply_pdl_extra_file",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "type": "time",
        "unit": "seconds",
        "version": "14fe21805fd65b8d8b4c719435fc1df79a470ea5288ed69bff73736ea055959f",
        "warmup_time": -1
    },
    "lexer.time_lexer__rvscf_lowering_emu": {
        "code": "def time_lexer__rvscf_lowering_emu() -> None:\n    \"\"\"Time lexing the `rvscf_lowering_emu.mlir` file.\"\"\"\n    return lex_file(BENCHMARKS_DIR.parent / MLIR_FILES[\"rvscf_lowering_emu\"])",
        "min_run_count": 2,
        "name": "lexer.time_lexer__rvscf_lowering_emu",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "type": "time",
        "unit": "seconds",
        "version": "74de0207c10fdccb8e77f1af87b0faea1c5af027889a4a2fe88bc63c8fed259e",
        "warmup_time": -1
    },
    "lexer.time_lexer_all": {
        "code": "def time_lexer_all() -> None:\n    \"\"\"Time lexing all `.mlir` files in xDSL's `tests/` directory .\"\"\"\n    mlir_files = (BENCHMARKS_DIR.parent / \"xdsl/tests\").rglob(\"*.mlir\")\n    for mlir_file in mlir_files:\n        lex_file(Path(mlir_file))",
        "min_run_count": 2,
        "name": "lexer.time_lexer_all",
        "number": 0,
        "param_names": [],
        "params": [],
        "repeat": 0,
        "rounds": 2,
        "sample_time": 0.01,
        "type": "time",
        "unit": "seconds",
        "version": "e31a3b6ff05b823b51688888f049a137ac56ec0c25fa59c55b653fb6feab012b",
        "warmup_time": -1
    },
    "version": 2
}